// Generated by CoffeeScript 2.3.1
var cfxify, compsCfxify, handleComps;

cfxify = ({createElement, createFactory}) => {
  if (createElement != null) {
    return (e) => {
      return (...args) => {
        return createElement.apply(null, [e, ...args]);
      };
    };
  // return createFactory e if typeof e is 'string'
  } else if (createFactory != null) {
    return (e) => {
      return createFactory(e);
    };
  } else {
    return null;
  }
};

compsCfxify = (_cfxify) => {
  return (domObj) => {
    return (Object.keys(domObj)).reduce((r, c) => {
      return {
        ...r,
        [`${c}`]: _cfxify(domObj[c])
      };
    }, {});
  };
};

handleComps = (_cfxify) => {
  return (domObj) => {
    var CFX, _extends;
    CFX = (compsCfxify(_cfxify))(domObj);
    _extends = function(extendsDomObj) {
      var _CFX;
      _CFX = {...this, ...(compsCfxify(extendsDomObj))};
      return {
        ..._CFX,
        _: {
          extends: _extends.bind(_CFX)
        }
      };
    };
    return {
      ...CFX,
      _: {
        extends: _extends.bind(CFX)
      }
    };
  };
};

export default ({createElement, createFactory}, waiToCfxify) => {
  var _cfxify, _handleComps, handleCfxify;
  _cfxify = cfxify({createElement, createFactory});
  if (_cfxify == null) {
    return;
  }
  _handleComps = handleComps(_cfxify);
  handleCfxify = (waiToCfxify) => {
    if (typeof waiToCfxify === 'object') {
      return _handleComps(waiToCfxify);
    } else {
      return _cfxify(waiToCfxify);
    }
  };
  if (waiToCfxify != null) {
    return handleCfxify(waiToCfxify);
  } else {
    return handleCfxify;
  }
};
